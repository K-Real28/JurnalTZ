	Программирование С# .Net Framework ~4.7, WinForms.

 

Создать базовый класс Person, содержащий поля:

а) персональный идентификатор (Строка до 20 символов. Каждый символ является цифрой от 0 до 9);

б) фамилия (Строка до 50 символов. Каждый символ является буквой кирилического алфавита);

в) имя (Строка до 50 символов. Каждый символ является буквой кирилического алфавита);

г) отчество (Строка до 50 символов. Каждый символ является буквой кирилического алфавита);

д) дата рождения (Формат даты «дд.ММ.гггг»: дд, ММ — день и месяц с нулём впереди для значений от 1 до 9; гггг — 4-символьное обозначение года (год пишется полностью));

е) электронный адрес (Строка 100 символов. Формат: [пользователь]@[доменная зона]);

ж) номер телефона (Строка 100 символов. Формат: [+][код страны][код оператора][номер абонента]).

 

Реализуемые методы класса Person:

а) добавление записи;

б) редактирование;

в) удаление.

 

В качестве источника данных можно использовать базу данных [на выбор] + Entity Framework.


Главную форму программы представить в виде таблицы в которой отображены все записи класса Person.

 

Столбцы таблицы представить в следующей структуре:

а) персональный идентификатор;

б) фамилия;

в) имя;

г) отчество.

 

На главной форме разместить:

а) кнопки управления записями класса Person: добавить, редактировать, удалить;

б) кнопку «Сохранить в файл», которая выполняет сохранение сведений выбранной записи таблицы в файл по указанному пути в формате xml (сериализация).

 

Добавление и редактирование сведений осуществлять на отдельной форме. Все поля класса Person обязателные для заполнения.

 

На форме добавления и редактирования записи разместить:

а) все поля класса Person с привязкой полей экземпляра класса через DataBindings;

б) панель с таймером времени работы формы.

 

В качестве примера интерфейса реализации программы смотри ссылку:

https://www.figma.com/proto/0fEHuZeVHLGlFahO7fAvVJ/TestExample?t=nTAulVbe60W4Ofn6-1&node-id=1-2

 

 

 

Информация к сведению:

1. Ввод данных у полей класса (DataAnnotations, StringLengthAttribute).

Информация по DataAnnotations:

https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations?view=netframework-4.7.2

Информация по StringLengthAttribute:

https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.stringlengthattribute?view=netframework-4.7.2

 

2. Привязка (Windows Forms Data Binding, Control.DataBindings).

Информация по Windows Forms Data Binding:

https://learn.microsoft.com/en-us/dotnet/desktop/winforms/windows-forms-data-binding?view=netframeworkdesktop-4.8

Информация по Control.DataBindings:

https://learn.microsoft.com/ru-ru/dotnet/api/system.windows.forms.control.databindings?view=netframework-4.7.2